apply plugin: 'com.android.application'
apply plugin: 'io.singularitynet.sdk'

android {
    compileSdkVersion 29
    buildToolsVersion "29.0.2"
    defaultConfig {
        applicationId "com.example.snetdemo"
        minSdkVersion 24
        targetSdkVersion 29
        versionCode 2
        versionName "2.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    lintOptions {
        lintConfig file("../lint.xml")
    }
}

repositories {
    mavenLocal()
    mavenCentral()
    maven {
        url 'https://jitpack.io'
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'androidx.appcompat:appcompat:1.0.2'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test.ext:junit:1.1.0'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.1.1'


    implementation 'com.github.bumptech.glide:glide:4.10.0'
    annotationProcessor 'com.github.bumptech.glide:compiler:4.10.0'

    implementation "io.grpc:grpc-okhttp:${grpcVersion}"
    implementation 'org.slf4j:slf4j-android:1.7.30'
    implementation "com.github.singnet.snet-sdk-java:snet-sdk-java:${snetSdkJavaVersion}"

    implementation project(":style-transfer-api")
    implementation project(":semantic-segmentation-api")
}


android {

    compileOptions {
        sourceCompatibility = 1.8
        targetCompatibility = 1.8
    }

    sourceSets {
        main {
            assets {
                srcDirs "${buildDir}/generated/assets"
            }
        }
    }

}

task copyEthereumProperties(type: Copy) {
    from file('../ethereum.properties')
    into "${buildDir}/generated/assets"
}
preBuild.dependsOn copyEthereumProperties
